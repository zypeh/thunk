---
title: 关于此站
date: 2017-02-18
---

### Preface · 前言

呼…… 好不容易又有时间能够停下来给我更新网志，可是一旦要写起来的时候又觉得浑身不舒服。觉得若不是自己亲手定制的主题就不安心。

最后还是下定决心给自己弄了一个，找个阙意的周末，架好网志，放了几个开篇文，至少看上去让自己好受些。

## 技术

以前我就是用 Jekyll + Github Pages 的方案来部署我的网志。那个时候也是看上了以上这几种优点。

* 使用 Markdown 编写文章。（后来这个喜欢让我写任何技术文章都倾向用 Markdown 表示）。
* 托管在 Github 上，又有版本控制。
* 网上资源多，使用者很多，遇到问题很容易就能搜到解答了。

现在 2017 年了。我想对的会做一些改进

首先我优先使用 Azure VM 来部署我的网志，而不完全是 Github Pages。这样可以给我更大的自由度，让我做更多的东西，例如未来的数据科学 Jupyter 插件。
使用的技术主要有

> VueJS 作为单页面应用，对应 SEO 问题使用了 SSR (Server-Side-Rendering) 迟些特定部分转将会转成静态文件。
> 支持 HTTP/2, 这个很大程度和 Progressive Web App 正交。如果开通了 TLS 连接的话，还能够重用连接来传输内容。

设计上就从简了，不使用特别的字体，少了很多 JS 库。主要是为了腾出空间给 Markdown 渲染，还有代码高亮库的，结果就取得了低于 3 Mb 的大小。(未 gzipped 压缩)库。参考了不少的网页设计师的设计，然后自己写了一个出来。
为了响应式体验，直接抄的也有。耗时最长的就是学习各种语义的 HTML 标签。

架构部分很大部分参考了 vue-ghpages-blog 的架构，原理就是通过 Github 提供的 API，客户端得到了我们的单页面应用，在启动的时候会向 Github 下的某个 repo 下的路径要一个文件列表。然后处理结果放到客户端应用里相对应的视图中。
而且文章都是从 Github 要的，把 lazy-loading 抬到到新的高度了。

### Epilog · 后言
写到这里，觉得我要做的东西更多了。之后会再补充多点东西，让这个网志越加完善。

希望你能够喜欢这个主题，有什么建议，或是问题可以在 Twitter 上找我 [ZhengyanPeh](https://twitter.com/ZhengyanPeh)
